name: Deploy Spring Boot to Remote Server

on:
  push:
    branches:
      - main  # This workflow runs on push to the main branch (adjust as needed)

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      
      # Step 1: Checkout the code from GitHub
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Java (install OpenJDK)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'  # You can change this based on the Java version you need (17 is chosen as an example)
          distribution: 'adoptium'  # Updated distribution name

      # Step 3: Build the Spring Boot application with Maven
      - name: Build with Maven
        run: mvn clean install -DskipTests  # Skips tests for faster build (remove if you want to run tests)

      # Step 4: Upload the generated .jar file to the server
      - name: Upload .jar file via SCP
        run: |
          scp -o StrictHostKeyChecking=no target/events-microservice-0.0.1-SNAPSHOT.jar user@your-server-ip:/home/ubuntu/app/
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      # Step 5: SSH into the server and start the app with PM2
      - name: SSH into remote server and start app with PM2
        run: |
          ssh -o StrictHostKeyChecking=no user@13.48.13.38 << 'EOF'
            cd /home/ubuntu/testdemo
            pm2 stop events-microservice || true  # Stops the existing PM2 process if it's running
            pm2 start events-microservice-0.0.1-SNAPSHOT.jar --name "events-microservice" -- -jar events-microservice-0.0.1-SNAPSHOT.jar
            pm2 save  # Save the PM2 process list for future restarts
          EOF
